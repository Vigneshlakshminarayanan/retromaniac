{"ast":null,"code":"var _jsxFileName = \"/Users/cognizanttechnologysolutions/Downloads/retro-main/src/_lib/Input.tsx\";\nimport * as React from \"react\";\nimport \"./Input.css\";\nvar defaultProps = {\n  readonly: false\n};\n/**\n * Note that this Input component is _fully controlled_, meaning\n * that we don't do any handling of the inserted data at this\n * level, and we expect that the parent takes care of it all\n */\n\nfunction Input(props) {\n  var handleChange = props.handleChange,\n      handleFocus = props.handleFocus,\n      header = props.header,\n      placeholder = props.placeholder,\n      readonly = props.readonly,\n      submit = props.submit,\n      _props$submitOnEnter = props.submitOnEnter,\n      submitOnEnter = _props$submitOnEnter === void 0 ? true : _props$submitOnEnter,\n      value = props.value;\n  var inputRef = React.useRef(null);\n\n  var submitOrEscape = function submitOrEscape(ev) {\n    if (inputRef.current && inputRef.current === document.activeElement) {\n      if (ev.key === \"Enter\" && !ev.shiftKey && submitOnEnter) {\n        inputRef.current.blur();\n        submit && submit();\n      }\n\n      if (ev.key === \"Escape\" || ev.key === \"Esc\") {\n        inputRef.current.blur();\n      }\n    }\n  };\n\n  React.useEffect(function () {\n    document.addEventListener('keydown', submitOrEscape);\n    return function () {\n      document.removeEventListener('keydown', submitOrEscape);\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, header && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, header), /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    onChange: handleChange,\n    onFocus: handleFocus,\n    placeholder: placeholder,\n    value: value,\n    readOnly: readonly,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }));\n}\n\nInput.defaultProps = defaultProps;\nexport default Input;","map":{"version":3,"sources":["/Users/cognizanttechnologysolutions/Downloads/retro-main/src/_lib/Input.tsx"],"names":["React","defaultProps","readonly","Input","props","handleChange","handleFocus","header","placeholder","submit","submitOnEnter","value","inputRef","useRef","submitOrEscape","ev","current","document","activeElement","key","shiftKey","blur","useEffect","addEventListener","removeEventListener"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,aAAP;AAaA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAArB;AAIA;AACA;AACA;AACA;AACA;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAkC;AAC9B,MACIC,YADJ,GAEID,KAFJ,CACIC,YADJ;AAAA,MACkBC,WADlB,GAEIF,KAFJ,CACkBE,WADlB;AAAA,MAC+BC,MAD/B,GAEIH,KAFJ,CAC+BG,MAD/B;AAAA,MACuCC,WADvC,GAEIJ,KAFJ,CACuCI,WADvC;AAAA,MACoDN,QADpD,GAEIE,KAFJ,CACoDF,QADpD;AAAA,MAC8DO,MAD9D,GAEIL,KAFJ,CAC8DK,MAD9D;AAAA,6BAEIL,KAFJ,CACsEM,aADtE;AAAA,MACsEA,aADtE,qCACsF,IADtF;AAAA,MAC4FC,KAD5F,GAEIP,KAFJ,CAC4FO,KAD5F;AAIA,MAAMC,QAAQ,GAAGZ,KAAK,CAACa,MAAN,CAAsC,IAAtC,CAAjB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,EAAD,EAAuB;AAC1C,QAAIH,QAAQ,CAACI,OAAT,IAAoBJ,QAAQ,CAACI,OAAT,KAAqBC,QAAQ,CAACC,aAAtD,EAAqE;AACjE,UAAIH,EAAE,CAACI,GAAH,KAAW,OAAX,IAAsB,CAACJ,EAAE,CAACK,QAA1B,IAAsCV,aAA1C,EAAyD;AACrDE,QAAAA,QAAQ,CAACI,OAAT,CAAiBK,IAAjB;AACAZ,QAAAA,MAAM,IAAIA,MAAM,EAAhB;AACH;;AACD,UAAIM,EAAE,CAACI,GAAH,KAAW,QAAX,IAAuBJ,EAAE,CAACI,GAAH,KAAW,KAAtC,EAA6C;AACzCP,QAAAA,QAAQ,CAACI,OAAT,CAAiBK,IAAjB;AACH;AACJ;AACJ,GAVD;;AAYArB,EAAAA,KAAK,CAACsB,SAAN,CAAgB,YAAM;AAClBL,IAAAA,QAAQ,CAACM,gBAAT,CAA0B,SAA1B,EAAqCT,cAArC;AACA,WAAO,YAAM;AACTG,MAAAA,QAAQ,CAACO,mBAAT,CAA6B,SAA7B,EAAwCV,cAAxC;AACH,KAFD;AAGH,GALD;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,MAAM,iBACH;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,MADL,CAFR,eAMI;AACI,IAAA,GAAG,EAAEK,QADT;AAEI,IAAA,QAAQ,EAAEP,YAFd;AAGI,IAAA,OAAO,EAAEC,WAHb;AAII,IAAA,WAAW,EAAEE,WAJjB;AAKI,IAAA,KAAK,EAAEG,KALX;AAMI,IAAA,QAAQ,EAAET,QANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAiBH;;AAEDC,KAAK,CAACF,YAAN,GAAqBA,YAArB;AAEA,eAAeE,KAAf","sourcesContent":["import * as React from \"react\";\n\nimport \"./Input.css\";\n\ntype InputProps = {\n    handleChange: (ev: React.ChangeEvent<HTMLInputElement>) => void\n    value: string\n    submit?: () =>Â void\n    submitOnEnter?: boolean\n    handleFocus?: (ev: React.ChangeEvent<HTMLInputElement>) => void\n    header?: string\n    placeholder?: string\n    readonly?: boolean\n};\n\nconst defaultProps = {\n    readonly: false\n};\n\n/**\n * Note that this Input component is _fully controlled_, meaning\n * that we don't do any handling of the inserted data at this\n * level, and we expect that the parent takes care of it all\n */\nfunction Input(props: InputProps) {\n    const {\n        handleChange, handleFocus, header, placeholder, readonly, submit, submitOnEnter = true, value\n    } = props;\n\n    const inputRef = React.useRef<HTMLInputElement | null>(null);\n\n    const submitOrEscape = (ev: KeyboardEvent) => {\n        if (inputRef.current && inputRef.current === document.activeElement) {\n            if (ev.key === \"Enter\" && !ev.shiftKey && submitOnEnter) {\n                inputRef.current.blur();\n                submit && submit();\n            }\n            if (ev.key === \"Escape\" || ev.key === \"Esc\") {\n                inputRef.current.blur();\n            }\n        }\n    };\n\n    React.useEffect(() => {\n        document.addEventListener('keydown', submitOrEscape);\n        return () => {\n            document.removeEventListener('keydown', submitOrEscape);\n        };\n    });\n\n    return (\n        <div className=\"input\">\n            {header && (\n                <div className=\"input-header\">\n                    {header}\n                </div>\n            )}\n            <input\n                ref={inputRef}\n                onChange={handleChange}\n                onFocus={handleFocus}\n                placeholder={placeholder}\n                value={value}\n                readOnly={readonly}\n            />\n        </div>\n    );\n}\n\nInput.defaultProps = defaultProps;\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}