{"ast":null,"code":"import _toConsumableArray from \"/Users/cognizanttechnologysolutions/Downloads/retro-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/cognizanttechnologysolutions/Downloads/retro-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/cognizanttechnologysolutions/Downloads/retro-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _jsxFileName = \"/Users/cognizanttechnologysolutions/Downloads/retro-main/src/Header/Users.jsx\";\n\nimport React, { useState } from \"react\";\nimport { useSubscription, useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { Tooltip } from \"@chakra-ui/core\";\nimport \"./Users.css\";\nvar GET_USERS = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    query {\\n        users {\\n            id\\n            name\\n            role\\n        }\\n    }\\n\"])));\nvar LEAVE_ROOM_MUTATION = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    mutation {\\n        leaveRoom\\n    }\\n\"])));\nvar USER_JOINED_SUBSCRIPTION = gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n    subscription userJoined {\\n        userJoined {\\n            name\\n        }\\n    }\\n\"])));\nvar USER_LEFT_SUBSCRIPTION = gql(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n    subscription userLeft {\\n        userLeft {\\n            name\\n        }\\n    }\\n\"])));\nexport default function Users() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1]; // Upon loading, we get all of the users that have already\n  // joined the room before us\n\n\n  useQuery(GET_USERS, {\n    onCompleted: function onCompleted(data) {\n      return setUsers(data.users);\n    }\n  }); // Then, if further users are logging in (or out), we update\n  // the list using this subscription\n\n  var _useSubscription = useSubscription(USER_JOINED_SUBSCRIPTION),\n      userJoinedEv = _useSubscription.data;\n\n  var _useSubscription2 = useSubscription(USER_LEFT_SUBSCRIPTION),\n      userLeftEv = _useSubscription2.data;\n\n  var _useMutation = useMutation(LEAVE_ROOM_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      leaveRoom = _useMutation2[0];\n\n  var unload = React.useCallback(function (ev) {\n    leaveRoom();\n    return null;\n  }, [leaveRoom]);\n  React.useEffect(function () {\n    window.addEventListener(\"beforeunload\", unload);\n    return function () {\n      return window.removeEventListener(\"beforeunload\", unload);\n    };\n  }, [unload]);\n  React.useEffect(function () {\n    if (userJoinedEv) {\n      setUsers(function (u) {\n        return [].concat(_toConsumableArray(u), [{\n          name: userJoinedEv.userJoined.name\n        }]);\n      });\n    }\n  }, [userJoinedEv]);\n  React.useEffect(function () {\n    if (userLeftEv) {\n      setUsers(function (u) {\n        return u.filter(function (_ref) {\n          var name = _ref.name;\n          return name !== userLeftEv.userLeft.name;\n        });\n      });\n    }\n  }, [userLeftEv]);\n\n  if (users.length === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, users.map(function (user) {\n    var firstChar = user.name.match(/(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g)[0];\n    var firstCharIsEmoji = firstChar.match(/(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26A7\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5-\\uDED7\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g); // Yes, supporting emojis is essential\n\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      key: user.id,\n      label: user.name,\n      \"aria-label\": user.name,\n      placement: \"bottom\",\n      backgroundColor: \"black\",\n      borderRadius: \"3px\",\n      fontSize: \"12px\",\n      color: \"var(--text-default-color)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: user.id,\n      className: \"user\",\n      tabIndex: 0,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, firstCharIsEmoji ? firstChar : firstChar.toUpperCase())));\n  }));\n}","map":{"version":3,"sources":["/Users/cognizanttechnologysolutions/Downloads/retro-main/src/Header/Users.jsx"],"names":["React","useState","useSubscription","useQuery","useMutation","gql","Tooltip","GET_USERS","LEAVE_ROOM_MUTATION","USER_JOINED_SUBSCRIPTION","USER_LEFT_SUBSCRIPTION","Users","users","setUsers","onCompleted","data","userJoinedEv","userLeftEv","leaveRoom","unload","useCallback","ev","useEffect","window","addEventListener","removeEventListener","u","name","userJoined","filter","userLeft","length","map","user","firstChar","match","firstCharIsEmoji","id","toUpperCase"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,EAA0BC,QAA1B,EAAoCC,WAApC,QAAuD,qBAAvD;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,OAAO,aAAP;AAEA,IAAMC,SAAS,GAAGF,GAAH,2KAAf;AAUA,IAAMG,mBAAmB,GAAGH,GAAH,mHAAzB;AAMA,IAAMI,wBAAwB,GAAGJ,GAAH,kKAA9B;AAQA,IAAMK,sBAAsB,GAAGL,GAAH,8JAA5B;AAQA,eAAe,SAASM,KAAT,GAAiB;AAAA;;AAC5B,kBAA0BV,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOW,KAAP;AAAA,MAAcC,QAAd,iBAD4B,CAG5B;AACA;;;AACAV,EAAAA,QAAQ,CAACI,SAAD,EAAY;AAAEO,IAAAA,WAAW,EAAE,qBAAAC,IAAI;AAAA,aAAIF,QAAQ,CAACE,IAAI,CAACH,KAAN,CAAZ;AAAA;AAAnB,GAAZ,CAAR,CAL4B,CAO5B;AACA;;AACA,yBAA+BV,eAAe,CAACO,wBAAD,CAA9C;AAAA,MAAcO,YAAd,oBAAQD,IAAR;;AACA,0BAA6Bb,eAAe,CAACQ,sBAAD,CAA5C;AAAA,MAAcO,UAAd,qBAAQF,IAAR;;AAEA,qBAAoBX,WAAW,CAACI,mBAAD,CAA/B;AAAA;AAAA,MAAOU,SAAP;;AAEA,MAAMC,MAAM,GAAGnB,KAAK,CAACoB,WAAN,CAAkB,UAACC,EAAD,EAAQ;AACrCH,IAAAA,SAAS;AACT,WAAO,IAAP;AACH,GAHc,EAGZ,CAACA,SAAD,CAHY,CAAf;AAKAlB,EAAAA,KAAK,CAACsB,SAAN,CAAgB,YAAM;AAClBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,cAAxB,EAAwCL,MAAxC;AACA,WAAO;AAAA,aAAMI,MAAM,CAACE,mBAAP,CAA2B,cAA3B,EAA2CN,MAA3C,CAAN;AAAA,KAAP;AACH,GAHD,EAGG,CAACA,MAAD,CAHH;AAKAnB,EAAAA,KAAK,CAACsB,SAAN,CAAgB,YAAM;AAClB,QAAIN,YAAJ,EAAkB;AACdH,MAAAA,QAAQ,CAAC,UAAAa,CAAC;AAAA,4CAAQA,CAAR,IAAW;AAAEC,UAAAA,IAAI,EAAEX,YAAY,CAACY,UAAb,CAAwBD;AAAhC,SAAX;AAAA,OAAF,CAAR;AACH;AACJ,GAJD,EAIG,CAACX,YAAD,CAJH;AAMAhB,EAAAA,KAAK,CAACsB,SAAN,CAAgB,YAAM;AAClB,QAAIL,UAAJ,EAAgB;AACZJ,MAAAA,QAAQ,CAAC,UAAAa,CAAC;AAAA,eAAIA,CAAC,CAACG,MAAF,CAAS;AAAA,cAAGF,IAAH,QAAGA,IAAH;AAAA,iBAAcA,IAAI,KAAKV,UAAU,CAACa,QAAX,CAAoBH,IAA3C;AAAA,SAAT,CAAJ;AAAA,OAAF,CAAR;AACH;AACJ,GAJD,EAIG,CAACV,UAAD,CAJH;;AAMA,MAAIL,KAAK,CAACmB,MAAN,KAAiB,CAArB,EAAwB;AACtB,WAAO,IAAP;AACD;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,KAAK,CAACoB,GAAN,CAAU,UAAAC,IAAI,EAAI;AACf,QAAMC,SAAS,GAAGD,IAAI,CAACN,IAAL,CAAUQ,KAAV,CAAgB,iKAAhB,EAAuB,CAAvB,CAAlB;AACA,QAAMC,gBAAgB,GAAGF,SAAS,CAACC,KAAV,CAAgB,+8CAAhB,CAAzB,CAFe,CAE0C;;AACzD,wBACI,oBAAC,OAAD;AACI,MAAA,GAAG,EAAEF,IAAI,CAACI,EADd;AAEI,MAAA,KAAK,EAAEJ,IAAI,CAACN,IAFhB;AAGI,oBAAYM,IAAI,CAACN,IAHrB;AAII,MAAA,SAAS,EAAC,QAJd;AAKI,MAAA,eAAe,EAAC,OALpB;AAMI,MAAA,YAAY,EAAC,KANjB;AAOI,MAAA,QAAQ,EAAC,MAPb;AAQI,MAAA,KAAK,EAAC,2BARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI;AAAK,MAAA,GAAG,EAAEM,IAAI,CAACI,EAAf;AAAmB,MAAA,SAAS,EAAC,MAA7B;AAAoC,MAAA,QAAQ,EAAE,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,gBAAgB,GAAGF,SAAH,GAAeA,SAAS,CAACI,WAAV,EADpC,CADJ,CAVJ,CADJ;AAkBH,GArBA,CADL,CADJ;AA0BH","sourcesContent":["import React, { useState } from \"react\";\nimport { useSubscription, useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { Tooltip } from \"@chakra-ui/core\";\n\nimport \"./Users.css\";\n\nconst GET_USERS = gql`\n    query {\n        users {\n            id\n            name\n            role\n        }\n    }\n`;\n\nconst LEAVE_ROOM_MUTATION = gql`\n    mutation {\n        leaveRoom\n    }\n`;\n\nconst USER_JOINED_SUBSCRIPTION = gql`\n    subscription userJoined {\n        userJoined {\n            name\n        }\n    }\n`;\n\nconst USER_LEFT_SUBSCRIPTION = gql`\n    subscription userLeft {\n        userLeft {\n            name\n        }\n    }\n`;\n\nexport default function Users() {\n    const [users, setUsers] = useState([]);\n\n    // Upon loading, we get all of the users that have already\n    // joined the room before us\n    useQuery(GET_USERS, { onCompleted: data => setUsers(data.users) });\n\n    // Then, if further users are logging in (or out), we update\n    // the list using this subscription\n    const { data: userJoinedEv } = useSubscription(USER_JOINED_SUBSCRIPTION);\n    const { data: userLeftEv } = useSubscription(USER_LEFT_SUBSCRIPTION);\n\n    const [leaveRoom] = useMutation(LEAVE_ROOM_MUTATION);\n\n    const unload = React.useCallback((ev) => {\n        leaveRoom();\n        return null;\n    }, [leaveRoom]);\n\n    React.useEffect(() => {\n        window.addEventListener(\"beforeunload\", unload);\n        return () => window.removeEventListener(\"beforeunload\", unload);\n    }, [unload]);\n\n    React.useEffect(() => {\n        if (userJoinedEv) {\n            setUsers(u => [...u, { name: userJoinedEv.userJoined.name }]);\n        }\n    }, [userJoinedEv]);\n\n    React.useEffect(() => {\n        if (userLeftEv) {\n            setUsers(u => u.filter(({ name }) => name !== userLeftEv.userLeft.name));\n        }\n    }, [userLeftEv]);\n\n    if (users.length === 0) {\n      return null;\n    }\n\n    return (\n        <div className=\"users\">\n            {users.map(user => {\n                const firstChar = user.name.match(/./gu)[0];\n                const firstCharIsEmoji = firstChar.match(/\\p{Emoji}/gu); // Yes, supporting emojis is essential\n                return (\n                    <Tooltip\n                        key={user.id}\n                        label={user.name}\n                        aria-label={user.name}\n                        placement=\"bottom\"\n                        backgroundColor=\"black\"\n                        borderRadius=\"3px\"\n                        fontSize=\"12px\"\n                        color=\"var(--text-default-color)\"\n                    >\n                        <div key={user.id} className=\"user\" tabIndex={0}>\n                            <span>\n                                {firstCharIsEmoji ? firstChar : firstChar.toUpperCase()}\n                            </span>\n                        </div>\n                    </Tooltip>\n                );\n            })}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}