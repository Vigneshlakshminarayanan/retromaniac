{"ast":null,"code":"import _slicedToArray from \"/Users/cognizanttechnologysolutions/Downloads/retro-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/cognizanttechnologysolutions/Downloads/retro-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _jsxFileName = \"/Users/cognizanttechnologysolutions/Downloads/retro-main/src/Footer/Footer.tsx\";\n\nimport * as React from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useLazyQuery, useMutation } from \"@apollo/react-hooks\";\nimport { useDisclosure } from \"@chakra-ui/core\";\nimport { Context } from \"../Context\";\nimport { UserRole } from \"../UserType\";\nimport useFileDownload from \"./useFileDownload\";\nimport Modal from \"../_lib/Modal\";\nimport Icon from \"../_lib/Icon\";\nimport Button, { ButtonType } from \"../_lib/Button\";\nimport MainAction from \"./MainAction\";\nimport ShareLink from \"./ShareLink\";\nimport Steps from \"../Steps\";\nimport Timer from \"./Timer\";\nimport \"./Footer.css\";\nvar GET_CARDS = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    query {\\n        cards {\\n            content\\n            type\\n        }\\n    }\\n\"])));\nvar LEAVE_ROOM_MUTATION = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    mutation {\\n        leaveRoom\\n    }\\n\"])));\nexport default function Footer() {\n  var _useLazyQuery = useLazyQuery(GET_CARDS, {\n    fetchPolicy: \"network-only\"\n  }),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n      loadCards = _useLazyQuery2[0],\n      data = _useLazyQuery2[1].data;\n\n  var _useMutation = useMutation(LEAVE_ROOM_MUTATION, {\n    onCompleted: function onCompleted() {\n      window.location.pathname = \"/\";\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      leaveRoom = _useMutation2[0];\n\n  var disclosure = useDisclosure();\n\n  var _React$useContext = React.useContext(Context),\n      currentStep = _React$useContext.currentStep,\n      user = _React$useContext.user,\n      setShowNotes = _React$useContext.setShowNotes,\n      showNotes = _React$useContext.showNotes;\n\n  useFileDownload(data);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Timer, {\n    shouldStart: currentStep === Steps.WRITE,\n    over: currentStep === Steps.REVEAL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    handleClick: function handleClick() {\n      return user && user.role === UserRole.ADMIN ? disclosure.onOpen() : leaveRoom();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Leave room\"), /*#__PURE__*/React.createElement(Button, {\n    type: ButtonType.CircularLarge,\n    tooltip: \"Export\",\n    handleClick: function handleClick() {\n      return loadCards();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"download\",\n    size: 17,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(ShareLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), currentStep !== Steps.WAIT && /*#__PURE__*/React.createElement(Button, {\n    type: showNotes ? ButtonType.CircularLargeEmpty : ButtonType.CircularLarge,\n    tooltip: showNotes ? \"Hide notes\" : \"Show notes\",\n    handleClick: function handleClick() {\n      return setShowNotes(!showNotes);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"list\",\n    size: 17,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(MainAction, {\n    currentStep: currentStep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    header: \"End this meeting?\",\n    disclosure: disclosure,\n    handleSubmit: function handleSubmit() {\n      return leaveRoom();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"You are the admin in this room. Once you leave, the meeting will be considered over, and the content of the room will be saved as is for \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"7 days\"), \". Are you sure you want to leave now?\"));\n}","map":{"version":3,"sources":["/Users/cognizanttechnologysolutions/Downloads/retro-main/src/Footer/Footer.tsx"],"names":["React","gql","useLazyQuery","useMutation","useDisclosure","Context","UserRole","useFileDownload","Modal","Icon","Button","ButtonType","MainAction","ShareLink","Steps","Timer","GET_CARDS","LEAVE_ROOM_MUTATION","Footer","fetchPolicy","loadCards","data","onCompleted","window","location","pathname","leaveRoom","disclosure","useContext","currentStep","user","setShowNotes","showNotes","WRITE","REVEAL","role","ADMIN","onOpen","CircularLarge","WAIT","CircularLargeEmpty"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useLazyQuery, useMutation } from \"@apollo/react-hooks\";\nimport { useDisclosure } from \"@chakra-ui/core\";\nimport { Context } from \"../Context\";\nimport { UserRole } from \"../UserType\";\nimport useFileDownload from \"./useFileDownload\";\nimport Modal from \"../_lib/Modal\";\nimport Icon from \"../_lib/Icon\";\nimport Button, { ButtonType } from \"../_lib/Button\";\nimport MainAction from \"./MainAction\";\nimport ShareLink from \"./ShareLink\";\nimport Steps from \"../Steps\";\nimport Timer from \"./Timer\";\n\nimport \"./Footer.css\";\n\nconst GET_CARDS = gql`\n    query {\n        cards {\n            content\n            type\n        }\n    }\n`;\n\nconst LEAVE_ROOM_MUTATION = gql`\n    mutation {\n        leaveRoom\n    }\n`;\n\nexport default function Footer() {\n    const [loadCards, { data }] = useLazyQuery(GET_CARDS, { fetchPolicy: \"network-only\" });\n    const [leaveRoom] = useMutation(LEAVE_ROOM_MUTATION, { onCompleted: () => { window.location.pathname = \"/\" } });\n\n    const disclosure = useDisclosure();\n\n    const { currentStep, user, setShowNotes, showNotes } = React.useContext(Context);\n\n    useFileDownload(data);\n\n    return (\n        <div className=\"footer\">\n            <div className=\"footer-left\">\n                <Timer shouldStart={currentStep === Steps.WRITE} over={currentStep === Steps.REVEAL} />\n            </div>\n            <div className=\"footer-right\">\n                <Button handleClick={() => user && user.role === UserRole.ADMIN ? disclosure.onOpen() : leaveRoom()}>\n                    Leave room\n                </Button>\n                <Button\n                    type={ButtonType.CircularLarge}\n                    tooltip=\"Export\"\n                    handleClick={() => loadCards()}\n                >\n                    <Icon name=\"download\" size={17} />\n                </Button>\n                <ShareLink />\n                {currentStep !== Steps.WAIT && (\n                    <Button\n                        type={showNotes ? ButtonType.CircularLargeEmpty : ButtonType.CircularLarge}\n                        tooltip={showNotes ? \"Hide notes\" : \"Show notes\"}\n                        handleClick={() => setShowNotes(!showNotes)}\n                    >\n                        <Icon name=\"list\" size={17} />\n                    </Button>\n                )}\n                <MainAction currentStep={currentStep} />\n            </div>\n            <Modal\n                header=\"End this meeting?\"\n                disclosure={disclosure}\n                handleSubmit={() => leaveRoom()}\n            >\n                You are the admin in this room. Once you leave, the meeting will be\n                considered over, and the content of the room will be saved as is\n                for <b>7 days</b>. Are you sure you want to leave now?\n            </Modal>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}