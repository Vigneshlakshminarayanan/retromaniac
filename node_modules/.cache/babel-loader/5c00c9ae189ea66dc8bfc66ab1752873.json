{"ast":null,"code":"import _slicedToArray from \"/Users/cognizanttechnologysolutions/Downloads/retro-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/cognizanttechnologysolutions/Downloads/retro-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _jsxFileName = \"/Users/cognizanttechnologysolutions/Downloads/retro-main/src/Login/JoinRoom.tsx\";\n\nimport React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { animated, useSpring } from \"react-spring\";\nimport { gql } from \"apollo-boost\";\nimport Button from \"../_lib/Button\";\nimport Card from \"../_lib/Card\";\nimport Input from \"../_lib/Input\";\nimport \"./JoinRoom.css\";\nvar CREATE_ROOM_MUTATION = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    mutation {\\n        createRoom {\\n            id\\n            step\\n            createdAt\\n            done\\n        }\\n    }\\n\"])));\nexport default function JoinRoom(_ref) {\n  var getRoom = _ref.getRoom,\n      setRoom = _ref.setRoom,\n      hasError = _ref.hasError;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      roomId = _useState2[0],\n      setRoomId = _useState2[1];\n\n  var _useMutation = useMutation(CREATE_ROOM_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createRoom = _useMutation2[0],\n      createRoomData = _useMutation2[1].data;\n\n  var animationProps = useSpring({\n    opacity: 1,\n    from: {\n      opacity: 0\n    }\n  });\n  React.useEffect(function () {\n    if (createRoomData) {\n      setRoom(createRoomData.createRoom);\n    }\n  }, [createRoomData, setRoom]);\n  return /*#__PURE__*/React.createElement(animated.div, {\n    className: \"menu\",\n    style: animationProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: 450,\n      fontSize: 14,\n      color: \"hsla(0, 0%, 100%, 0.4)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    width: 450,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      fontSize: 29,\n      fontWeight: 500,\n      color: \"#ffffffde\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Join a room\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"5px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"Type the room code\"), /*#__PURE__*/React.createElement(Input, {\n    handleChange: function handleChange(ev) {\n      return setRoomId(ev.target.value);\n    },\n    value: roomId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), hasError && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"var(--red-color)\",\n      fontSize: 13,\n      padding: \"0 10px\",\n      marginTop: -5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \"This room does not exist.\"), /*#__PURE__*/React.createElement(Button, {\n    handleClick: function handleClick() {\n      return getRoom({\n        variables: {\n          id: roomId\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Join\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: 15,\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"or\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    onClick: function onClick() {\n      return createRoom();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, \"Create a room\")))));\n}","map":{"version":3,"sources":["/Users/cognizanttechnologysolutions/Downloads/retro-main/src/Login/JoinRoom.tsx"],"names":["React","useState","useMutation","animated","useSpring","gql","Button","Card","Input","CREATE_ROOM_MUTATION","JoinRoom","getRoom","setRoom","hasError","roomId","setRoomId","createRoom","createRoomData","data","animationProps","opacity","from","useEffect","maxWidth","fontSize","color","textAlign","fontWeight","padding","ev","target","value","marginTop","variables","id","paddingTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { animated, useSpring } from \"react-spring\";\nimport { gql } from \"apollo-boost\";\nimport RoomType from \"../Room/RoomType\";\nimport Button from \"../_lib/Button\";\nimport Card from \"../_lib/Card\";\nimport Input from \"../_lib/Input\";\n\nimport \"./JoinRoom.css\";\n\ntype JoinRoomProps = {\n    getRoom: (input: { variables: { id: string } }) => void\n    setRoom: (room: RoomType) => void\n    hasError: boolean\n};\n\nconst CREATE_ROOM_MUTATION = gql`\n    mutation {\n        createRoom {\n            id\n            step\n            createdAt\n            done\n        }\n    }\n`;\n\nexport default function JoinRoom({ getRoom, setRoom, hasError }: JoinRoomProps) {\n    const [roomId, setRoomId] = useState(\"\");\n\n    const [createRoom, { data: createRoomData }] = useMutation(CREATE_ROOM_MUTATION);\n\n    const animationProps = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n    React.useEffect(() => {\n        if (createRoomData) {\n            setRoom(createRoomData.createRoom);\n        }\n    }, [createRoomData, setRoom]);\n\n    return (\n        <animated.div className=\"menu\" style={animationProps}>\n            <div style={{ maxWidth: 450, fontSize: 14, color: \"hsla(0, 0%, 100%, 0.4)\" }}>\n                <Card width={450}>\n                    <div style={{ textAlign: \"center\", fontSize: 29, fontWeight: 500, color: \"#ffffffde\" }}>\n                        Join a room\n                    </div>\n                    <div style={{ textAlign: \"center\", padding: \"5px 0\" }}>\n                        Type the room code\n                    </div>\n                    <Input handleChange={ev => setRoomId(ev.target.value)} value={roomId} />\n                    {hasError && (\n                        <div style={{ color: \"var(--red-color)\", fontSize: 13, padding: \"0 10px\", marginTop: -5 }}>\n                            This room does not exist.\n                        </div>\n                    )}\n                    <Button handleClick={() => getRoom({ variables: { id: roomId }})}>\n                        Join\n                    </Button>\n                    <div style={{ paddingTop: 15, textAlign: \"center\" }}>\n                        or\n                        {\" \"}\n                        <a onClick={() => createRoom()}>Create a room</a>\n                    </div>\n                </Card>\n            </div>\n        </animated.div>\n    );\n}"]},"metadata":{},"sourceType":"module"}