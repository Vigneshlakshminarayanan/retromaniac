{"ast":null,"code":"import _slicedToArray from \"/Users/cognizanttechnologysolutions/Downloads/retro-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/cognizanttechnologysolutions/Downloads/retro-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _jsxFileName = \"/Users/cognizanttechnologysolutions/Downloads/retro-main/src/Login/Login.jsx\";\n\nimport React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { animated, useSpring } from \"react-spring\";\nimport Input from \"../_lib/Input\";\nimport Button from \"../_lib/Button\";\nimport Card from \"../_lib/Card\";\nimport \"./Login.css\";\nvar LOGIN_MUTATION = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    mutation Login($username: String!) {\\n        login(username: $username) {\\n            id\\n            name\\n            role\\n        }\\n    }\\n\"])));\nexport default function Login(_ref) {\n  var setUser = _ref.setUser;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useMutation = useMutation(LOGIN_MUTATION, {\n    variables: {\n      username: username.trim()\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      login = _useMutation2[0],\n      data = _useMutation2[1].data;\n\n  var animationProps = useSpring({\n    opacity: 1,\n    from: {\n      opacity: 0\n    }\n  });\n  React.useEffect(function () {\n    if (data) {\n      setUser(data.login);\n    }\n  }, [data, setUser]);\n  return /*#__PURE__*/React.createElement(animated.div, {\n    className: \"login\",\n    style: animationProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"0 10px\",\n      lineHeight: 1.5,\n      maxWidth: \"90%\",\n      fontWeight: 300,\n      fontSize: 14\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Type your name:\"), /*#__PURE__*/React.createElement(Input, {\n    handleChange: function handleChange(ev) {\n      return setUsername(ev.target.value);\n    },\n    submit: login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    handleClick: login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"Enter\")));\n}","map":{"version":3,"sources":["/Users/cognizanttechnologysolutions/Downloads/retro-main/src/Login/Login.jsx"],"names":["React","useState","useMutation","gql","animated","useSpring","Input","Button","Card","LOGIN_MUTATION","Login","setUser","username","setUsername","variables","trim","login","data","animationProps","opacity","from","useEffect","padding","lineHeight","maxWidth","fontWeight","fontSize","ev","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,cAApC;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAEA,OAAO,aAAP;AAEA,IAAMC,cAAc,GAAGN,GAAH,6NAApB;AAUA,eAAe,SAASO,KAAT,OAA4B;AAAA,MAAXC,OAAW,QAAXA,OAAW;;AACvC,kBAAgCV,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBC,WAAjB;;AACA,qBAA0BX,WAAW,CAACO,cAAD,EAAiB;AAAEK,IAAAA,SAAS,EAAE;AAAEF,MAAAA,QAAQ,EAAEA,QAAQ,CAACG,IAAT;AAAZ;AAAb,GAAjB,CAArC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAgBC,IAAhB,oBAAgBA,IAAhB;;AAEA,MAAMC,cAAc,GAAGb,SAAS,CAAC;AAAEc,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,IAAI,EAAE;AAAED,MAAAA,OAAO,EAAE;AAAX;AAApB,GAAD,CAAhC;AAEAnB,EAAAA,KAAK,CAACqB,SAAN,CAAgB,YAAM;AAClB,QAAIJ,IAAJ,EAAU;AACNN,MAAAA,OAAO,CAACM,IAAI,CAACD,KAAN,CAAP;AACH;AACJ,GAJD,EAIG,CAACC,IAAD,EAAON,OAAP,CAJH;AAMA,sBACI,oBAAC,QAAD,CAAU,GAAV;AAAc,IAAA,SAAS,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAEO,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAE;AAAEI,MAAAA,OAAO,EAAE,QAAX;AAAqBC,MAAAA,UAAU,EAAE,GAAjC;AAAsCC,MAAAA,QAAQ,EAAE,KAAhD;AAAuDC,MAAAA,UAAU,EAAE,GAAnE;AAAwEC,MAAAA,QAAQ,EAAE;AAAlF,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAII,oBAAC,KAAD;AAAO,IAAA,YAAY,EAAE,sBAAAC,EAAE;AAAA,aAAId,WAAW,CAACc,EAAE,CAACC,MAAH,CAAUC,KAAX,CAAf;AAAA,KAAvB;AAAyD,IAAA,MAAM,EAAEb,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALJ,CADJ,CADJ;AAaH","sourcesContent":["import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { animated, useSpring } from \"react-spring\";\nimport Input from \"../_lib/Input\";\nimport Button from \"../_lib/Button\";\nimport Card from \"../_lib/Card\";\n\nimport \"./Login.css\";\n\nconst LOGIN_MUTATION = gql`\n    mutation Login($username: String!) {\n        login(username: $username) {\n            id\n            name\n            role\n        }\n    }\n`;\n\nexport default function Login({ setUser }) {\n    const [username, setUsername] = useState('')\n    const [login, { data }] = useMutation(LOGIN_MUTATION, { variables: { username: username.trim() }});\n\n    const animationProps = useSpring({ opacity: 1, from: { opacity: 0 } });\n\n    React.useEffect(() => {\n        if (data) {\n            setUser(data.login);\n        }\n    }, [data, setUser]);\n\n    return (\n        <animated.div className=\"login\" style={animationProps}>\n            <Card>\n                <div style={{ padding: \"0 10px\", lineHeight: 1.5, maxWidth: \"90%\", fontWeight: 300, fontSize: 14 }}>\n                    Type your name:\n                </div>\n                <Input handleChange={ev => setUsername(ev.target.value)} submit={login} />\n                <Button handleClick={login}>\n                    Enter\n                </Button>\n            </Card>\n        </animated.div>\n    );\n}"]},"metadata":{},"sourceType":"module"}